ActParamList ::= ( , Epsilon ID INTC 
ActParamMore ::= ( , Epsilon ID INTC 
AddOp ::= + - 
ArrayType ::= ARRAY 
AssCall ::= ( . Epsilon ID INTC [ ] 
AssignmentRest ::= ( . Epsilon ID INTC [ ] 
BaseType ::= CHAR INTEGER 
CallStmRest ::= ( 
CmpOp ::= < = 
ConditionalStm ::= IF 
DeclarePart ::= Epsilon TYPE VAR PROCEDURE
Exp ::= ( ID INTC 
Factor ::= ( ID INTC 
FidMore ::= , Epsilon ID 
FieldDecList ::= ; ARRAY CHAR Epsilon ID INTEGER 
FieldDecMore ::= ; ARRAY CHAR Epsilon ID INTEGER 
FieldVar ::= ID 
FieldVarMore ::= ( Epsilon ID INTC [ ] 
FormList ::= ID 
IdList ::= ID 
IdMore ::= , Epsilon ID 
InputStm ::= READ 
Invar ::= ID 
LoopStm ::= WHILE 
Low ::= INTC 
MultOp ::= * / 
OtherFactor ::= ( * / Epsilon ID INTC 
OtherRelE ::= < = 
OtherTerm ::= ( + - Epsilon ID INTC 
OutputStm ::= WRITE 
Param ::= ARRAY CHAR ID INTEGER RECORD VAR 
ParamDecList ::= ARRAY CHAR ID INTEGER RECORD VAR 
ParamList ::= ARRAY CHAR Epsilon ID INTEGER RECORD VAR 
ParamMore ::= ; ARRAY CHAR Epsilon ID INTEGER RECORD VAR 
ProcBody ::= BEGIN 
ProcDec ::= PROCEDURE 
ProcDecMore ::= Epsilon PROCDECLARATION 
ProcDecPart ::= Epsilon TYPE PROCEDURE 
ProcName ::= ID 
Program ::= PROGRAM 
ProgramBody ::= BEGIN 
ProgramHead ::= PROGRAM 
ProgramName ::= ID 
RecType ::= RECORD 
RelExp ::= ( ID INTC 
ReturnStm ::= RETURN 
Stm ::= ( . Epsilon ID IF INTC READ RETURN WHILE WRITE [ ] 
StmList ::= ( . Epsilon ID IF INTC READ RETURN WHILE WRITE [ ] 
StmMore ::= ( . ; Epsilon ID IF INTC READ RETURN WHILE WRITE [ ] 
StructureType ::= ARRAY RECORD 
Term ::= ( ID INTC 
Top ::= INTC 
TypeDec ::= TYPE 
TypeDecList ::= ID 
TypeDecMore ::= Epsilon ID 
TypeDecpart ::= Epsilon TYPE 
TypeDef ::= ARRAY CHAR ID INTEGER RECORD 
TypeId ::= ID 
VarDec ::= VAR 
VarDecList ::= ARRAY CHAR ID INTEGER RECORD 
VarDecMore ::= ARRAY CHAR Epsilon ID INTEGER RECORD 
VarDecpart ::= Epsilon VAR 
VarIdList ::= ID 
VarIdMore ::= , Epsilon ID 
VariMore ::= ( . Epsilon ID INTC [ ] 
Variable ::= ID 
